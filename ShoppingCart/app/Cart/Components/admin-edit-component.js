var AdminEdit;
(function (AdminEdit) {
    var AdminEditComponent = (function () {
        function AdminEditComponent() {
            this.controller = AdminEditController;
            this.bindings = {
                productList: '<',
                deleteProd: '&',
                editProd: '&',
                dockable: '@'
            };
            this.templateUrl = 'app/Cart/Templates/admin-edit.html';
        }
        return AdminEditComponent;
    }());
    ;
    var AdminEditController = (function () {
        function AdminEditController(emitter, genericDataService, $window, $timeout) {
            var _this = this;
            this.emitter = emitter;
            this.genericDataService = genericDataService;
            this.$window = $window;
            this.$timeout = $timeout;
            if (this.dockable) {
                this.getAllProducts();
                window.addEventListener('storage', function (event) {
                    _this.addProductToList(JSON.parse(event.newValue));
                });
            }
        }
        AdminEditController.prototype.deleteProduct = function (product) {
            this.deleteProd({
                $event: {
                    product: product
                }
            });
        };
        ;
        AdminEditController.prototype.update = function (product) {
            this.editProd({
                $event: {
                    product: product
                }
            });
        };
        ;
        AdminEditController.prototype.updateOnEnter = function (product, event) {
            if (event.key === "Enter") {
                this.update(product);
            }
            ;
        };
        ;
        AdminEditController.prototype.toggleEditMode = function (item) {
            // Toggle
            item.editMode = !item.editMode;
        };
        ;
        AdminEditController.prototype.addProductToList = function (item) {
            var _this = this;
            if (item) {
                this.$timeout(function () { return (_this.productList.push(item)); }, 0);
            }
        };
        AdminEditController.prototype.getAllProducts = function () {
            var _this = this;
            this.genericDataService.getDataPromise('adminRepository').then(function (data) {
                if (data) {
                    _this.productList = data;
                }
            }).catch(function (data) { });
        };
        ;
        AdminEditController.$inject = ['emitterService', 'genericDataService', '$window', '$timeout'];
        return AdminEditController;
    }());
    ;
    angular.module('app').component('adminEditComponent', new AdminEditComponent());
})(AdminEdit || (AdminEdit = {}));
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRtaW4tZWRpdC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhZG1pbi1lZGl0LWNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxJQUFVLFNBQVMsQ0EwR2xCO0FBMUdELFdBQVUsU0FBUyxFQUFDLENBQUM7SUFVakI7UUFPSTtZQUNJLElBQUksQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUM7WUFDdEMsSUFBSSxDQUFDLFFBQVEsR0FBRztnQkFDWixXQUFXLEVBQUUsR0FBRztnQkFDaEIsVUFBVSxFQUFFLEdBQUc7Z0JBQ2YsUUFBUSxFQUFFLEdBQUc7Z0JBQ2IsUUFBUSxFQUFFLEdBQUc7YUFDaEIsQ0FBQztZQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsb0NBQW9DLENBQUM7UUFDNUQsQ0FBQztRQUNMLHlCQUFDO0lBQUQsQ0FBQyxBQWpCRCxJQWlCQztJQUFBLENBQUM7SUFFRjtRQVNJLDZCQUFvQixPQUF3QixFQUFVLGtCQUF1QixFQUFVLE9BQTJCLEVBQVUsUUFBNEI7WUFUNUosaUJBeUVDO1lBaEV1QixZQUFPLEdBQVAsT0FBTyxDQUFpQjtZQUFVLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBSztZQUFVLFlBQU8sR0FBUCxPQUFPLENBQW9CO1lBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBb0I7WUFFcEosRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFFdEIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxVQUFBLEtBQUs7b0JBQ3BDLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN0RCxDQUFDLENBQUMsQ0FBQztZQUVQLENBQUM7UUFDTCxDQUFDO1FBRU0sMkNBQWEsR0FBcEIsVUFBcUIsT0FBTztZQUV4QixJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUNaLE1BQU0sRUFBRTtvQkFDSixPQUFPLEVBQUUsT0FBTztpQkFDbkI7YUFDSixDQUFDLENBQUM7UUFDUCxDQUFDOztRQUVNLG9DQUFNLEdBQWIsVUFBYyxPQUFPO1lBRWpCLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsTUFBTSxFQUFFO29CQUNKLE9BQU8sRUFBRSxPQUFPO2lCQUNuQjthQUNKLENBQUMsQ0FBQztRQUNQLENBQUM7O1FBRU0sMkNBQWEsR0FBcEIsVUFBcUIsT0FBTyxFQUFFLEtBQUs7WUFFL0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3pCLENBQUM7WUFBQSxDQUFDO1FBQ04sQ0FBQzs7UUFFTSw0Q0FBYyxHQUFyQixVQUFzQixJQUFJO1lBQ3RCLFNBQVM7WUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNuQyxDQUFDOztRQUVPLDhDQUFnQixHQUF4QixVQUF5QixJQUFJO1lBQTdCLGlCQU9DO1lBTEcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDUCxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQU0sT0FBQSxDQUNoQixLQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FDMUIsRUFGZSxDQUVmLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDZCxDQUFDO1FBQ0wsQ0FBQztRQUVPLDRDQUFjLEdBQXRCO1lBQUEsaUJBWUM7WUFWRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUMxRCxVQUFBLElBQUk7Z0JBQ0EsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDUCxLQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztnQkFFNUIsQ0FBQztZQUNMLENBQUMsQ0FDSixDQUFDLEtBQUssQ0FBQyxVQUFBLElBQUksSUFBTSxDQUFDLENBRWQsQ0FBQztRQUNWLENBQUM7O1FBakVNLDJCQUFPLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxvQkFBb0IsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFrRXJGLDBCQUFDO0lBQUQsQ0FBQyxBQXpFRCxJQXlFQztJQUFBLENBQUM7SUFFRixPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLGtCQUFrQixFQUFFLENBQUMsQ0FBQztBQUVwRixDQUFDLEVBMUdTLFNBQVMsS0FBVCxTQUFTLFFBMEdsQjtBQUFBLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm5hbWVzcGFjZSBBZG1pbkVkaXQge1xuXG4gICAgaW50ZXJmYWNlIElBZG1pbkVkaXRDb21wb25lbnRCaW5kaW5ncyB7XG4gICAgICAgIHByb2R1Y3RMaXN0OiBBcnJheTxhbnk+O1xuICAgICAgICBkZWxldGVQcm9kOiAoZXZlbnQ6IGFueSkgPT4gYW55O1xuICAgICAgICBlZGl0UHJvZDogKGV2ZW50OiBhbnkpID0+IGFueTtcbiAgICB9XG5cbiAgICBpbXBvcnQgSUVtaXR0ZXJTZXJ2aWNlID0gRW1pdHRlci5JRW1pdHRlclNlcnZpY2U7XG5cbiAgICBjbGFzcyBBZG1pbkVkaXRDb21wb25lbnQgaW1wbGVtZW50cyBuZy5JQ29tcG9uZW50T3B0aW9ucyB7XG5cbiAgICAgICAgcHVibGljIGNvbnRyb2xsZXI6IGFueTtcblxuICAgICAgICBwdWJsaWMgdGVtcGxhdGVVcmw6IHN0cmluZztcbiAgICAgICAgcHVibGljIGJpbmRpbmdzOiBhbnk7XG5cbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBBZG1pbkVkaXRDb250cm9sbGVyO1xuICAgICAgICAgICAgdGhpcy5iaW5kaW5ncyA9IHtcbiAgICAgICAgICAgICAgICBwcm9kdWN0TGlzdDogJzwnLFxuICAgICAgICAgICAgICAgIGRlbGV0ZVByb2Q6ICcmJyxcbiAgICAgICAgICAgICAgICBlZGl0UHJvZDogJyYnLFxuICAgICAgICAgICAgICAgIGRvY2thYmxlOiAnQCdcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnRlbXBsYXRlVXJsID0gJ2FwcC9DYXJ0L1RlbXBsYXRlcy9hZG1pbi1lZGl0Lmh0bWwnO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNsYXNzIEFkbWluRWRpdENvbnRyb2xsZXIgaW1wbGVtZW50cyBJQWRtaW5FZGl0Q29tcG9uZW50QmluZGluZ3Mge1xuXG4gICAgICAgIHB1YmxpYyBwcm9kdWN0TGlzdDogQXJyYXk8YW55PjtcbiAgICAgICAgcHVibGljIGRlbGV0ZVByb2Q6IChldmVudDogYW55KSA9PiBhbnk7XG4gICAgICAgIHB1YmxpYyBlZGl0UHJvZDogKGV2ZW50OiBhbnkpID0+IGFueTtcbiAgICAgICAgcHVibGljIGRvY2thYmxlOiBzdHJpbmc7XG5cbiAgICAgICAgc3RhdGljICRpbmplY3QgPSBbJ2VtaXR0ZXJTZXJ2aWNlJywgJ2dlbmVyaWNEYXRhU2VydmljZScsICckd2luZG93JywgJyR0aW1lb3V0J107XG5cbiAgICAgICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbWl0dGVyOiBJRW1pdHRlclNlcnZpY2UsIHByaXZhdGUgZ2VuZXJpY0RhdGFTZXJ2aWNlOiBhbnksIHByaXZhdGUgJHdpbmRvdyA6IG5nLklXaW5kb3dTZXJ2aWNlLCBwcml2YXRlICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UpIHtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZG9ja2FibGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdldEFsbFByb2R1Y3RzKCk7XG4gIFxuICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFByb2R1Y3RUb0xpc3QoSlNPTi5wYXJzZShldmVudC5uZXdWYWx1ZSkpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgZGVsZXRlUHJvZHVjdChwcm9kdWN0KSB7XG5cbiAgICAgICAgICAgIHRoaXMuZGVsZXRlUHJvZCh7XG4gICAgICAgICAgICAgICAgJGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3Q6IHByb2R1Y3RcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBwdWJsaWMgdXBkYXRlKHByb2R1Y3QpIHtcblxuICAgICAgICAgICAgdGhpcy5lZGl0UHJvZCh7XG4gICAgICAgICAgICAgICAgJGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3Q6IHByb2R1Y3RcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBwdWJsaWMgdXBkYXRlT25FbnRlcihwcm9kdWN0LCBldmVudCkge1xuXG4gICAgICAgICAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZShwcm9kdWN0KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG5cbiAgICAgICAgcHVibGljIHRvZ2dsZUVkaXRNb2RlKGl0ZW0pIHtcbiAgICAgICAgICAgIC8vIFRvZ2dsZVxuICAgICAgICAgICAgaXRlbS5lZGl0TW9kZSA9ICFpdGVtLmVkaXRNb2RlO1xuICAgICAgICB9O1xuXG4gICAgICAgIHByaXZhdGUgYWRkUHJvZHVjdFRvTGlzdChpdGVtKSB7XG5cbiAgICAgICAgICAgIGlmIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvZHVjdExpc3QucHVzaChpdGVtKVxuICAgICAgICAgICAgICAgICAgICApLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZ2V0QWxsUHJvZHVjdHMoKSB7XG5cbiAgICAgICAgICAgIHRoaXMuZ2VuZXJpY0RhdGFTZXJ2aWNlLmdldERhdGFQcm9taXNlKCdhZG1pblJlcG9zaXRvcnknKS50aGVuKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9kdWN0TGlzdCA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3ZtLnByb2R1Y3RzUmVjZWl2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKS5jYXRjaChkYXRhID0+IHsgfVxuXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbXBvbmVudCgnYWRtaW5FZGl0Q29tcG9uZW50JywgbmV3IEFkbWluRWRpdENvbXBvbmVudCgpKTtcblxufTsgIl19